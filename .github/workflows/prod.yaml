# Name of our workflow
name: Production deploy

# Trigger the workflow on push to main branch
on:
  pull_request:
    branches:
      - main

# List of jobs
# A "job" is a set of steps that are executed on the same runner
jobs:
  # Name of the job
  test-and-build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout codes
        uses: actions/checkout@v4

      - name: Use Node.js 16.x
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: install dependencies
        run: npm install

      - name: run test
        run: npm run test

      - name: build docker
        run: |
          docker build -t cicd-learning-image:${{ github.event.pull_request.head.sha }} .
          docker login -u tungtk99 -p ${{ secrets.DockerPassword }}
          docker tag cicd-learning-image:${{ github.event.pull_request.head.sha }} tungtk99/cicd-learning-image:${{ github.event.pull_request.head.sha }}
          docker push tungtk99/cicd-learning-image:${{ github.event.pull_request.head.sha }}



  # # test-and-deploy-to-netlify:
  #   # Operate system to run on
  #   runs-on: ubuntu-latest

  #   # List of steps that make up the job
  #   steps:
  #   # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   # Setup Nodejs environment
  #   - name: Use Node.js 16.x
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '16.x'

  #   # Install dependencies:
  #   - name: Install dependencies
  #     run: npm install

  #   # Run tests
  #   - name: Run tests
  #     run: npm run test

  #   # Deploy to netlify
  #   - name: Netlify deploy
  #     uses: jsmrcaga/action-netlify-deploy@v2.0.0
  #     with:
  #     # Auth token to use with netlify
  #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       # Your Netlify site id
  #       NETLIFY_SITE_ID:  ${{ secrets.NETLIFY_SITE_ID }}
  #       # Directory where built files are stored
  #       build_directory: './dist'
  #       # Command to install dependencies
  #       install_command: npm install
  #       # Command to build static website
  #       build_command: npm run build