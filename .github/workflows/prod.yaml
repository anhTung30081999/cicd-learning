# Name of our workflow
name: Production deploy

# Trigger the workflow on push to main branch
on:
  pull_request:
    branches:
      - main

# List of jobs
# A "job" is a set of steps that are executed on the same runner
jobs:
  # Name of the job
  test-and-builds-docker-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: checkout codes
        uses: actions/checkout@v4

      - name: Determine which library be used
        id: package_manager
        shell: bash
        run: |
          echo "name=$([ -f ./yarn.lock ] && echo "yarn" || ([ -f ./package-lock.json ] && echo "npm") || echo "pnpm")" >> $GITHUB_OUTPUT

      - name: use the node_module cache if available [npm]
        if: steps.package_manager.outputs.name == 'npm'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-builds-${{ hashFiles('**/package-lock.json') }}
          restore-keys:
            ${{ runner.os }}-builds-${{ hashFiles('**/package-lock.json') }}

      - name: Get yarn cache directory path [yarn]
        id: yarn-cache-dir-path
        if: steps.package_manager.outputs.name == 'yarn'
        run: echo "yarn-cache-dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Use the node_module cache if available [yarn]
        if: steps.package_manager.outputs.name == 'yarn'
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-builds-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-builds-${{ hashFiles('**/yarn.lock') }}

      - name: install dependencies
        run: |
            if [ "${{ steps.package_manager.outputs.name }}" == "yarn" ]; then
              yarn install
            elif [ "${{ steps.package_manager.outputs.name }}" == "npm" ]; then
              npm install
            fi

      - name: run test
        run: |
            if [ "${{ steps.package_manager.outputs.name }}" == "yarn" ]; then
              npm run test
            elif [ "${{ steps.package_manager.outputs.name }}" == "npm" ]; then
              npm run test
            fi

      - name: Test github script
        uses: actions/github-script@v7
        with:
          script: |
            const { appendFileSync } = require('fs');
            appendFileSync(process.env.GITHUB_ENV, 'enff=123\n');

      - name: Value from env
        run: echo $enff

      - name: test
        id: test
        run: echo "key=this is a test" >> $GITHUB_OUTPUT
      
      - name: test2
        run: echo "${{ steps.test.outputs.key }}"
      

      # - name: builds docker
      #   uses: ./.github/actions/builds-docker
      #   with:
      #     commit-hash: ${{ github.event.pull_request.head.sha }}
      #     docker-password: ${{ secrets.DockerPassword }}
      #     user-name: tungtk99